
// 패키지 선언
package ch06.sec03;

// 클래스 선언 - 객체 생성을 위한 설계도를 작성
// public class = 공개 클래스를 선언한다는 뜻.
// 공개 클래스: 어느 위치에 있든, 패키지와 상관없이 사용 가능하다.
public class SportsCar {
//	하나의 소스 파일은 복수 개의 클래스 선언을 포함 할 수 있따
	class Tire{}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
	}
//	여태 생성한 클래스는 객체를 생성하기 위한 설계도이지만, 객체를 만ㅁ들지 않았고, main() 메소드만 작성해서 실행할 목적으로 클래스를 이용함.
//	챕터6은 main()메소드 없이 클래스를 선언하고 객체를 생성하는 방법을 배우는 챕터
//	객체는 단독으로 존재 가능하지만, 대부분 다른 객체와 관계를 맺고있음. 관계의 종류는 (집합 관계), (사용 관계), (상속 관계)가 있다.
	
//	ex) --> 집합관계: 완성품과 부품의 관계 -->ex) 자동차는 엔진,타이어,핸들등으로 구성되어서 자동차와 부품들은 집합 관계
//	ex) --> 상속관계: 부모와 자식 관계 --> ex) 자동차가 기계의 특징을 물려받으면, 기계(부모)와 자동차(자식)은 상속 관계
//	ex) --> 사용관계: 다른 객체의 필드를 읽고 변경하거나, 메소드를 호출하는 관계. --> ex) 사람이 자동차에게 달린다, 멈춘다 등의 메소드를 호출하면 사람과 자동차는 사용 관계
	
//	상속의 장점 : -부모 객체가 자신이 가지고있는 필드와 메소드를 자식에게 상속시켜서, 1. 코드의 재사용성을 높여줌,  2. 유지 보수 시간을 최소화 시켜줌.
	
//	객체를 생성하기 위해선 클래스가 필요. ex) 자동차를 생성하려면 설계도가 필요. 클래스로부터 생성된 객체를 해당 클래스의 인스턴스 라고 부름.
//	동일한 클래스로부터 여러개의 인스터스를 만들 수 있음 -> ex) 동일한 설계도로 여러 대의 자동차를 만드는 것.
}
